/* 盒模型 */
.box-border {
  box-sizing: border-box;
}
.box-content {
  box-sizing: content-box;
}
/* 元素框类型 */
$displayTypes: block, inline-block, inline, flex, inline-flex, table, table-caption, table-cell, table-column, table-column-group, table-footer-group, table-header-group, table-row-group, table-row, flow-root, grid, inline-grid, contents, hidden;
@each $property in $displayTypes {
  .#{$property} {
    @if $property == hidden {
      display: none !important;
    } @else {
      display: #{$property} !important;
    }
  }
}
/* 浮动 */
@each $property in right, left, none {
  .float-#{$property} {
    float: #{$property} !important;
  }
}
@each $property in right, left, both, none {
  .clear-#{$property} {
    clear: #{$property} !important;
  }
}
/* object fit */
@each $property in contain, cover, fill, none, scale-down {
  .object-#{$property} {
    object-fit: #{$property} !important;
  }
}
/* object position */
@each $property in bottom, center, left, left-bottom, left-top, right, right-bottom, right-top, top {
  .object-#{$property} {
    @if $property == left-bottom {
      object-position: left bottom !important;
    } @else if $property == left-top {
      object-position: left top !important;
    } @else if $property == right-top {
      object-position: right top !important;
    } @else if $property == right-bottom {
      object-position: right bottom !important;
    } @else {
      object-position: #{$property} !important;
    }
  }
}

/* 溢出 */
@each $property in auto, hidden, visible, scroll {
  .overflow-#{$property} {
    overflow: #{$property} !important;
  }
  .overflow-x-#{$property} {
    overflow: #{$property} !important;
  }
  .overflow-y-#{$property} {
    overflow: #{$property} !important;
  }
}
/* 滚动行为 */
@each $property in auto, contain, none {
  .overscroll-#{$property} {
    overscroll-behavior: #{$property} !important;
  }
  .overscroll-y-#{$property} {
    overscroll-behavior-y: #{$property} !important;
  }
  .overscroll-x-#{$property} {
    overscroll-behavior-x: #{$property} !important;
  }
}

/* 定位 */
@each $property in static, relative, absolute, fixed, sticky {
  .position-#{$property} {
    position: #{$property} !important;
  }
}

/* 可见性 */
@each $property in visible, invisible {
  .#{$property} {
    @if $property == invisible {
      visibility: hidden !important;
    } @else {
      visibility: #{$property} !important;
    }
  }
}

/* z-index */


/* 弹性布局flex */
.flex {
  display: flex;
}
// flex-direction
@each $property in row, row-reverse, column, column-reverse {
  .flex-#{$property} {
    flex-direction: #{$property} !important;
  }
}
// flex-wrap
@each $property in wrap, wrap-reverse, nowrap {
  .flex-#{$property} {
    flex-wrap: #{$property} !important;
  }
}
// shrink & grow
.flex-1 {
  flex: 1 1 0%;
}
.flex-1 {
  flex: 1 1 0%;
}
.flex-auto {
  flex: 1 1 auto;
}
.flex-initial {
  flex: 0 1 auto;
}
.flex-none {
  flex: none;
}
.flex-grow-0 {
  flex-grow: 0;
}
.flex-grow {
  flex-grow: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-shrink {
  flex-shrink: 1;
}
$order-number:0;
@while $order-number <= 12 {
  .order-#{$order-number} {
    order: $order-number !important;
  }
  $order-number: $order-number + 1;
}
.order-first {
  order: -9999;
}
.order-last {
  order: 9999;
}
.order-none {
  order: 0;
}



// 垂直居中

// 行内水平居中
.tc {
  text-align: center;
}
// 定宽水平居中
.margin-auto {
  margin: 0 auto;
}
// 水平居左
.tl {
  text-align: left;
}

// 水平靠右
.tr {
  text-align: right;
}

// 水平垂直居中
.flex-single-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
.flex-multi-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.grid-center {
  display: grid; // 或 inline-grid
  place-items: center;
}
// 未知宽高水平垂直居中
.position-center {
  position:absolute;
  left: 50%;
  top:50%;
  transform: translate(-50%, -50%);
}
// 栅格
